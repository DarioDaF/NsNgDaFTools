#! /usr/bin/env nodejs

"use strict";

// Require CWD to be in the app folder

/*************************************************/
/* DaF Local Component Template                  */
/* for NativeScript Angular - 2018 Dario Fagotto */
/*************************************************/

const VERSION = "1.1"

const HEADER = `This code was generated by DaF Local Component Template V. ${VERSION}`;

const fs = require("fs");
const path = require("path");

function titleCase(s) {
  return s.slice(0, 1).toUpperCase() + s.slice(1);
}

function convName(s) {
  return s.split("-").map(titleCase).join("");
}

module.exports = {
  genNsNgComponentTemplate: function(name) {
    const cname = convName(name);

    // Create component code
    fs.writeFile(`./${name}.component.ts`, `// ${HEADER}

import { Component, OnInit } from "@angular/core";

@Component({
    selector: "${cname}",
    moduleId: module.id,
    templateUrl: "./${name}.component.html",
    styleUrls: ["./${name}.component.css"]
})
export class ${cname}Component implements OnInit {
    constructor() {
        // Use the constructor to inject services.
    }

    ngOnInit(): void {
        // Use the "ngOnInit" handler to initialize data for the view.
    }
}
`, (e) => {
      if(e !== null) {
        throw e;
      }
    });
    
    // Create component template
    fs.writeFile(`./${name}.component.html`, `<!-- ${HEADER} -->


`, (e) => {
      if(e !== null) {
        throw e;
      }
    });
    
    // Create component style
    fs.writeFile(`./${name}.component.scss`, `// ${HEADER}


`, (e) => {
      if(e !== null) {
        throw e;
      }
    });
  }
};

if(require.main === module) {
  // process.argv = ["node", "<filename>.js", ...];

  function helpCLI() {
    console.error("Invalid arguments: expected <component-file-name> [<module-file-name>] [<app-directory>]\n");
  }

  if((process.argv.length < 3) || (process.argv.length > 5)) {
    helpCLI();
    process.exit(1);
  }

  const name = process.argv[2];

  const modName = process.argv.length >= 4 ? process.argv[3] : name;

  const appDir = process.argv.length >= 5 ? process.argv[4] : "./app";
  
  process.chdir(path.join(appDir, modName);

  module.exports.genNsNgComponentTemplate(name);
}
